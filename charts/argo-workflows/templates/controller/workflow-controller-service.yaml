{{ $controllers := deepCopy $.Values.controllers | merge (dict (include "argo-workflows.namespace" $) $.Values.controller) }}
{{ range $ns, $config := $controllers -}}
{{ $controller := deepCopy $.Values.controller | merge $config -}}
{{- $context := merge (dict "controller" $controller) $}}
{{- if or $controller.metricsConfig.enabled $controller.telemetryConfig.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "argo-workflows.controller.fullname" $context }}
  namespace: {{ $ns | quote }}
  labels:
    {{- include "argo-workflows.labels" (dict "context" $context "component" $controller.name "name" $controller.name) | nindent 4 }}
    app.kubernetes.io/version: {{ include "argo-workflows.controller_chart_version_label" $context }}
    {{- with $controller.serviceLabels }}
      {{ toYaml . | nindent 4 }}
    {{- end }}
  {{- with $controller.serviceAnnotations }}
  annotations:
    {{- toYaml . | nindent 4}}
  {{- end }}
spec:
  ports:
  {{- if $controller.metricsConfig.enabled }}
  - name: {{ $controller.metricsConfig.servicePortName }}
    port: {{ $controller.metricsConfig.servicePort }}
    protocol: TCP
    targetPort: {{ $controller.metricsConfig.port }}
  {{- end }}
  {{- if $controller.telemetryConfig.enabled }}
  - name: {{ $controller.telemetryConfig.servicePortName }}
    port: {{ $controller.telemetryConfig.servicePort }}
    protocol: TCP
    targetPort: {{ $controller.telemetryConfig.port }}
  {{- end }}
  selector:
    {{- include "argo-workflows.selectorLabels" (dict "context" $context "name" $controller.name) | nindent 4 }}
  sessionAffinity: None
  type: {{ $controller.serviceType }}
  {{- if and (eq $controller.serviceType "LoadBalancer") $controller.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
    {{- toYaml $controller.loadBalancerSourceRanges | nindent 4 }}
  {{- end }}
{{- end -}}
{{- end }}
