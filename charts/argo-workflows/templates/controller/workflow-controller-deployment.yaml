{{ $controllers := .Values.controllers | default (dict (include "argo-workflows.namespace" .) .Values.controller) -}}
{{ range $ns, $config := $controllers -}}
{{ $controller := deepCopy $.Values.controller | merge $config -}}
{{- $context := merge (dict "controller" $controller) $ }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "argo-workflows.controller.fullname" $context }}
  namespace: {{ $ns | quote }}
  labels:
    {{- include "argo-workflows.labels" (dict "context" $ "component" $controller.name "name" $controller.name) | nindent 4 }}
    app.kubernetes.io/version: {{ include "argo-workflows.controller_chart_version_label" $context }}
  {{- with $controller.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ $controller.replicas }}
  revisionHistoryLimit: {{ $controller.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "argo-workflows.selectorLabels" (dict "context" $ "name" $controller.name) | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "argo-workflows.labels" (dict "context" $context "component" $controller.name "name" $controller.name) | nindent 8 }}
        app.kubernetes.io/version: {{ include "argo-workflows.controller_chart_version_label" $context }}
        {{- with $controller.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with $controller.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ template "argo-workflows.controllerServiceAccountName" $context }}
      {{- with $controller.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $controller.extraInitContainers }}
      initContainers:
        {{- tpl (toYaml .) $ | nindent 8 }}
      {{- end }}
      containers:
        - name: controller
          image: "{{- include "argo-workflows.image" (dict "context" $context "image" $controller.image) }}:{{ default (include "argo-workflows.defaultTag" $context) $controller.image.tag }}"
          imagePullPolicy: {{ $.Values.images.pullPolicy }}
          command: [ "workflow-controller" ]
          args:
          - "--configmap"
          - "{{ template "argo-workflows.controller.config-map.name" $context }}"
          - "--executor-image"
          - "{{- include "argo-workflows.image" (dict "context" $context "image" $.Values.executor.image) }}:{{ default (include "argo-workflows.defaultTag" $context) $.Values.executor.image.tag }}"
          - "--loglevel"
          - "{{ $controller.logging.level }}"
          - "--gloglevel"
          - "{{ $controller.logging.globallevel }}"
          - "--log-format"
          - "{{ $controller.logging.format }}"
          {{- if $.Values.singleNamespace }}
          - "--namespaced"
          {{- end }}
          {{- with $controller.workflowWorkers }}
          - "--workflow-workers"
          - {{ . | quote }}
          {{- end }}
          {{- with $controller.workflowTTLWorkers }}
          - "--workflow-ttl-workers"
          - {{ . | quote }}
          {{- end }}
          {{- with $controller.podCleanupWorkers }}
          - "--pod-cleanup-workers"
          - {{ . | quote }}
          {{- end }}
          {{- with $controller.cronWorkflowWorkers }}
          - "--cron-workflow-workers"
          - {{ . | quote }}
          {{- end }}
          {{- with $controller.extraArgs }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
          securityContext:
            {{- toYaml $controller.securityContext | nindent 12 }}
          env:
            - name: ARGO_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: LEADER_ELECTION_IDENTITY
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
          {{- if eq (int $controller.replicas) 1 }}
            - name: LEADER_ELECTION_DISABLE
              value: "true"
          {{- end }}
          {{- with $controller.extraEnv }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml $controller.resources | nindent 12 }}
          {{- with $controller.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 10 }}
          {{- end }}
          ports:
            - name: {{ $controller.metricsConfig.portName }}
              containerPort: {{ $controller.metricsConfig.port }}
            - containerPort: 6060
          livenessProbe: {{ $controller.livenessProbe | toYaml | nindent 12 }}
        {{- with $controller.extraContainers }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with $.Values.images.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $controller.volumes }}
      volumes:
        {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with $controller.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $controller.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $controller.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $controller.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- range $constraint := . }}
      - {{ toYaml $constraint | nindent 8 | trim }}
        {{- if not $constraint.labelSelector }}
        labelSelector:
          matchLabels:
            {{- include "argo-workflows.selectorLabels" (dict "context" $ "name" $controller.name) | nindent 12 }}
        {{- end }}
        {{- end }}
      {{- end }}
      {{- with $controller.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
{{- end }}
